{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","classname","Add","todo","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","index","isComplete","onClick","TodoList","setTodo","test","newTodos","refreshedTodos","removeArr","filter","todoId","newValue","item","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAqCeA,MAjCf,SAAkBC,GAClB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAWC,iBAAQ,MAoBrB,OAlBJC,qBAAU,WACPF,EAASG,QAAQC,WAkBb,uBAAMC,UAAU,YAAYC,SAXd,SAAAC,GACjBA,EAAEC,iBAEFZ,EAAMU,SAAS,CACXG,GAAGC,KAAKC,MAAqB,IAAfD,KAAKE,UAClBC,KAAMf,IAGXC,EAAS,KAGN,UACI,uBAAOe,KAAK,OAAOC,YAAY,aAAaC,MAAOlB,EAAOmB,KAAK,OAAOZ,UAAU,aAAaa,SAhBnF,SAAAX,GACjBR,EAASQ,EAAEY,OAAOH,QAe0GI,IAAKpB,IAE1H,yBAAQqB,UAAU,WAAlB,cAA8B,cAAC,IAAD,CAAcC,KAAG,EAACC,MAAI,IAApD,W,gBCWIC,MApCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAC5C,EAAuB/B,mBAAS,CAC5BY,GAAG,KACHO,MAAQ,KAFZ,mBAAOa,EAAP,KAAaC,EAAb,KAaA,OAAGD,EAAKpB,GACG,cAAC,EAAD,CAAUoB,KAAMA,EAAMvB,SATZ,SAAAU,GACfY,EAAWC,EAAKpB,GAAIO,GACpBc,EAAQ,CACNrB,GAAI,KACJO,MAAO,QAQRS,EAAMM,KAAI,SAACR,EAAMS,GAAP,OACb,sBAAK3B,UAAWkB,EAAKU,WAAa,oBAAsB,WAAxD,UAEI,qBAAmBC,QAAS,kBAAMR,EAAaH,EAAKd,KAApD,SACKc,EAAKV,MADAU,EAAKd,IAGf,qBAAKJ,UAAU,QAAf,SAEI,cAAC,IAAD,CACA6B,QAAS,kBAAMP,EAAWJ,EAAKd,KAC/BJ,UAAU,oBATuD2B,O,MC0BlEG,MA/Cf,WAEI,MAAyBtC,mBAAU,IAAnC,mBAAO4B,EAAP,KAAcW,EAAd,KAoCA,OACI,gCACI,oEACA,cAAC,EAAD,CAAU9B,SArCF,SAAAiB,GACZ,GAAKA,EAAKV,OAAQ,QAAQwB,KAAKd,EAAKV,MAApC,CAGA,IAAMyB,EAAQ,CAAGf,GAAH,mBAAYE,IAE1BW,EAAQE,OAgCJ,cAAC,EAAD,CACAb,MAAOA,EAAOC,aAfD,SAAAjB,GACjB,IAAI8B,EAAiBd,EAAMM,KAAI,SAAAR,GAI3B,OAHIA,EAAKd,KAAOA,IACZc,EAAKU,YAAcV,EAAKU,YAErBV,KAEXa,EAAQG,IAQsCZ,WArB/B,SAAAlB,GACf,IAAM+B,EAAY,YAAIf,GAAOgB,QAAO,SAAAlB,GAAI,OAAIA,EAAKd,KAAOA,KAExD2B,EAAQI,IAkB8DZ,WA7BvD,SAACc,EAAQC,EAAUC,GACjCD,EAAS9B,OAAQ,QAAQwB,KAAKM,EAAS9B,OAG5CuB,GAAQ,SAAAS,GAAI,OAAIA,EAAKd,IAAIa,EAAQA,EAAKnC,KAAOiC,EAASC,EAAWC,aCVtDE,MARf,WACE,OACE,qBAAKzC,UAAU,WAAf,SACC,cAAC,EAAD,OCHL0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.af178224.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport \"./TodoForm.css\"\r\nimport {FiPlusCircle} from \"react-icons/fi\"\r\n\r\nfunction TodoForm(props) {\r\nconst [input, setInput] = useState('')\r\n\r\n\r\nconst inputRef = useRef (null)\r\n\r\nuseEffect(() => {\r\n   inputRef.current.focus ()\r\n})\r\n\r\nconst handleChange = e => {\r\n    setInput(e.target.value)\r\n}\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n        id:Math.floor(Math.random() *10000),\r\n         text: input\r\n    })\r\n\r\n    setInput(\"\")\r\n}\r\n    return (\r\n       <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n           <input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputRef}/>\r\n\r\n           <button classname=\"todo-btn\"> <FiPlusCircle Add todo /> </button>\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport \"./Todo.css\"\r\nimport {AiFillCloseCircle} from \"react-icons/ai\"\r\n\r\n\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] =useState({\r\n        id:null,\r\n        value:  \"\"\r\n    })\r\n\r\n    const submitUpdate = value => {\r\n          updateTodo(edit.id, value)\r\n          setEdit({\r\n            id: null, \r\n            value: \"\"\r\n          })\r\n    }\r\n    \r\n    if(edit.id){\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n\r\n                <AiFillCloseCircle \r\n                onClick={() => removeTodo(todo.id)}\r\n                className=\"delete-icon\" />\r\n\r\n            </div>\r\n\r\n        </div> \r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, {useState} from 'react'\r\nimport TodoForm from \"./TodoForm\"\r\nimport Todo from \"./Todo\"\r\nimport \"./TodoList.css\"\r\n\r\nfunction TodoList() {\r\n\r\n    const [todos, setTodo] = useState ([])\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)){\r\n            return\r\n        }\r\n        const newTodos =[todo, ...todos]\r\n\r\n        setTodo(newTodos)\r\n\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue, item) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)){\r\n        return\r\n    }\r\n    setTodo(prev => prev.map(item = (item.id === todoId ? newValue : item)))\r\n\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodo(removeArr)\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let refreshedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodo(refreshedTodos)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What do we have planned for today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo \r\n            todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\nexport default TodoList\r\n","import React from \"react\";\nimport './App.css';\nimport TodoList from \"./components/TodoList\";\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n     <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}